{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,SAMpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAZbL,EAAKa,iBAAiB,UAiBtB,SAAsBC,GACpBA,EAAEC,iBAGF,IAAIC,EAAQC,OAAOjB,EAAKkB,SAASb,MAAMc,OACvC,MAAMC,EAAOH,OAAOjB,EAAKkB,SAASE,KAAKD,OACjCE,EAASJ,OAAOjB,EAAKkB,SAASG,OAAOF,OAG3C,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCnB,EAAcmB,EAAGN,GACdO,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MAEjBmB,EAAA1B,GAAS2B,OAAOC,QAAQ,qBAAqBtB,QAAeC,MAAU,IAEvEsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAElBmB,EAAA1B,GAAS2B,OAAOG,QAAQ,oBAAoBxB,QAAeC,MAAU,IAEzEW,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["// Se importan la libreria notiflix.\nimport Notiflix from 'notiflix';\n\n// Se guarda en una variable el selector de html, con la clase form.\nconst form = document.querySelector('.form');\n\n// Se aÃ±ade el \"Event Listener\" al enviar el formulario.\nform.addEventListener('submit', OnFormSubmit);\n\n// Funcion proporcionada en la tarea, para crear las promesas.\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// Funcion usada al enviar el formulario.\nfunction OnFormSubmit(e) { \n  e.preventDefault();\n\n  // Se crean las variables, para los datos recibidos del formulario.\n  let delay = Number(form.elements.delay.value);\n  const step = Number(form.elements.step.value);\n  const amount = Number(form.elements.amount.value);\n\n  // Ciclo for para crear las promesas requeridas.\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        // Promesa creada con exito.\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        // Promesa rechazada.\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","Number","elements","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.526e00cc.js.map"}